{"version":3,"sources":["components/Sidebar.js","components/ImageCard.js","components/SearchBar.js","utils/searchCriteria.js","utils/debounceHook.js","components/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["SideBar","props","className","filterName","filterItems","map","item","currentSelection","key","onClick","handleSelection","ImageCard","style","width","src","emp","image","alt","name","jobTitle","display","department","officeLocation","workPhone","email","SearchBar","onSubmit","event","preventDefault","id","type","placeholder","value","search","onChange","handleInputChange","handleNameSort","title","aria-hidden","handleLocationSort","searchCriteria","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","console","log","handler","setTimeout","clearTimeout","getAllEmployees","sortCriteria","filteredemps","AllEmployees","filter","isMatch","Object","keys","criteria","hasOwnProperty","trim","length","checkIfEmployeesMatchesCriteria","by","sort","emp1","emp2","ascending","localeCompare","MainContent","prev","useRef","changedProps","entries","reduce","ps","k","v","current","useTraceUpdate","searchText","setSearchText","employees","setEmployees","setSortCriteria","debouncedSearchTerm","goclone","source","prototype","toString","call","clone","i","prop","defaultSearchCriteria","emps","filteredEmps","allEmps","toLowerCase","includes","fetchEmployees","target","renderEmployees","cities","App","searchLocation","setSearchLocation","searchJobTitle","searchDepartment","Sidebar","filterType","innerText","getCurrentSearchCriteria","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.63f06a71.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction SideBar(props) {\r\n  return (\r\n    <div className=\"list-group\">\r\n      <li className=\"list-group-item list-group-item-action font-weight-bold\">\r\n        {props.filterName}\r\n      </li>\r\n      {props.filterItems.map((item) => {\r\n        let className =\r\n          item === props.currentSelection\r\n            ? 'list-group-item list-group-item-action active'\r\n            : 'list-group-item list-group-item-action ';\r\n        return (\r\n          <button\r\n            key={'btn-' + item}\r\n            className={className}\r\n            onClick={props.handleSelection}\r\n          >\r\n            {item}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","import React from 'react';\r\n\r\nfunction ImageCard(props) {\r\n  // id={props.emp.id}\r\n  return (\r\n    <div className=\"card\" style={{ width: '18rem' }}>\r\n      <img\r\n        className=\"card-img-top\"\r\n        src={props.emp.image}\r\n        alt={props.emp.name + '_avatar'}\r\n      ></img>\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{props.emp.name}</h5>\r\n        <h6 className=\"card-subtitle mb-2 text-muted\">{props.emp.jobTitle}</h6>\r\n        <div>\r\n          <span style={{ display: 'inline-block' }} className=\"card-text\">\r\n            Department: {props.emp.department}\r\n          </span>\r\n          <span style={{ display: 'inline-block' }} className=\"card-text\">\r\n            Office: {props.emp.officeLocation}\r\n          </span>\r\n          <span style={{ display: 'inline-block' }} className=\"card-text\">\r\n            Phone: {props.emp.workPhone}\r\n          </span>\r\n          <span style={{ display: 'inline-block' }} className=\"card-text\">\r\n            {props.emp.email}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageCard;\r\n","import React from 'react';\r\n\r\nfunction SearchBar(props) {\r\n  return (\r\n    <>\r\n      <form onSubmit={(event) => event.preventDefault()} className=\"w-100 mb-5\">\r\n        <input\r\n          id=\"searchInput\"\r\n          type=\"text\"\r\n          placeholder=\"search by employee name\"\r\n          value={props.search}\r\n          onChange={props.handleInputChange}\r\n          className=\"form-control form-control-lg w-75 ml-3\"\r\n          style={{ display: 'inline' }}\r\n        ></input>\r\n        <button\r\n          id=\"sortByNameBtn\"\r\n          className=\"btn btn-large pb-2\"\r\n          style={{ display: 'inline' }}\r\n          onClick={props.handleNameSort}\r\n          title=\"Sort by Name\"\r\n        >\r\n          <i\r\n            className=\"fa fa-sort-alpha-asc fa-2x\"\r\n            style={{ display: 'inline' }}\r\n            aria-hidden=\"true\"\r\n          ></i>\r\n        </button>\r\n        <button\r\n          id=\"sortByDeptBtn\"\r\n          className=\"btn btn-large pb-2\"\r\n          style={{ display: 'inline' }}\r\n          onClick={props.handleLocationSort}\r\n          title=\"Sort by Department\"\r\n        >\r\n          <i\r\n            className=\"fa fa-sort-amount-asc fa-2x\"\r\n            style={{ display: 'inline' }}\r\n            aria-hidden=\"true\"\r\n          ></i>\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","export const searchCriteria = {\r\n  officeLocation: 'New York',\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useDebounce = (value, delay) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(\r\n    () => {\r\n      console.log('debouncing value...');\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n      // Cancel the timeout if value or delay changes\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    // Only call the effect if value or delay changes.\r\n    [value, delay]\r\n  );\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport ImageCard from './ImageCard';\r\nimport Searchbar from './SearchBar';\r\nimport { searchCriteria as defaultSearchCriteria } from '../utils/searchCriteria';\r\nimport AllEmployees from '../utils/empdata.json';\r\nimport useDebounce from '../utils/debounceHook';\r\n\r\nfunction useTraceUpdate(props) {\r\n  const prev = useRef(props);\r\n  useEffect(() => {\r\n    const changedProps = Object.entries(props).reduce((ps, [k, v]) => {\r\n      if (prev.current[k] !== v) {\r\n        ps[k] = [prev.current[k], v];\r\n      }\r\n      return ps;\r\n    }, {});\r\n    if (Object.keys(changedProps).length > 0) {\r\n      console.log('Changed props:', changedProps);\r\n    }\r\n    prev.current = props;\r\n  });\r\n}\r\n\r\nfunction MainContent(props) {\r\n  useTraceUpdate(props);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [employees, setEmployees] = useState();\r\n  const [sortCriteria, setSortCriteria] = useState();\r\n\r\n  const debouncedSearchTerm = useDebounce(searchText, 500);\r\n\r\n  useEffect(() => {\r\n    console.log('rendering component');\r\n    // update the employees according to the search result\r\n    let searchCriteria = props.searchCriteria\r\n      ? goclone(props.searchCriteria)\r\n      : defaultSearchCriteria;\r\n    if (!debouncedSearchTerm) {\r\n      setEmployees(getAllEmployees(searchCriteria, sortCriteria));\r\n    } else {\r\n      let emps = fetchEmployees(\r\n        debouncedSearchTerm,\r\n        searchCriteria,\r\n        sortCriteria\r\n      );\r\n      setEmployees(emps);\r\n    }\r\n  }, [debouncedSearchTerm, props.searchCriteria, sortCriteria]);\r\n\r\n  const handleInputChange = (event) => {\r\n    setSearchText(event.target.value);\r\n  };\r\n\r\n  const handleNameSort = (event) => {\r\n    setSortCriteria({\r\n      by: 'byName',\r\n      ascending: !(sortCriteria && sortCriteria.ascending),\r\n    });\r\n  };\r\n\r\n  const handleLocationSort = (event) => {\r\n    setSortCriteria({\r\n      by: 'byLocation',\r\n      ascending: !(sortCriteria && sortCriteria.ascending),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div id=\"mainContent\" className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <Searchbar\r\n          handleNameSort={handleNameSort}\r\n          handleLocationSort={handleLocationSort}\r\n          handleInputChange={handleInputChange}\r\n          search={searchText}\r\n        />\r\n      </div>\r\n      <div className=\"row\">{renderEmployees(employees)}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction renderEmployees(employees) {\r\n  if (employees) {\r\n    return employees.map((emp, i) => {\r\n      return (\r\n        <div key={i} className=\"col col-4\">\r\n          <ImageCard emp={emp} />\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nfunction fetchEmployees(searchText, searchCriteria, sortCriteria) {\r\n  // this is where we do stuff to fetch employees\r\n  let allEmps = getAllEmployees(searchCriteria, sortCriteria);\r\n  let filteredEmps;\r\n  if (searchText) {\r\n    filteredEmps = allEmps.filter((emp) => {\r\n      return emp.name.toLowerCase().includes(searchText.toLowerCase());\r\n    });\r\n  } else {\r\n    filteredEmps = allEmps;\r\n  }\r\n  console.log('fileted emps ' + filteredEmps);\r\n  return filteredEmps;\r\n}\r\n\r\nfunction getAllEmployees(searchCriteria, sortCriteria) {\r\n  let emps = AllEmployees;\r\n  let filteredemps = emps.filter((emp) =>\r\n    checkIfEmployeesMatchesCriteria(emp, searchCriteria)\r\n  );\r\n  if (sortCriteria) {\r\n    if (sortCriteria.by === 'byName') {\r\n      filteredemps.sort((emp1, emp2) => {\r\n        return sortCriteria.ascending\r\n          ? emp1.name.localeCompare(emp2.name)\r\n          : -emp1.name.localeCompare(emp2.name);\r\n      });\r\n    } else {\r\n      filteredemps.sort((emp1, emp2) => {\r\n        return sortCriteria.ascending\r\n          ? emp1.department.localeCompare(emp2.department)\r\n          : -emp1.department.localeCompare(emp2.department);\r\n      });\r\n    }\r\n  }\r\n  console.log(filteredemps);\r\n  return filteredemps;\r\n}\r\n\r\nfunction checkIfEmployeesMatchesCriteria(emp, searchCriteria) {\r\n  let isMatch = true;\r\n  for (let criteria of Object.keys(searchCriteria)) {\r\n    if (!isMatch) break;\r\n    if (emp.hasOwnProperty(criteria)) {\r\n      //Now match the property value\r\n      isMatch =\r\n        emp[criteria] === searchCriteria[criteria] ||\r\n        searchCriteria[criteria].trim().length === 0;\r\n    } else {\r\n      isMatch = false;\r\n    }\r\n  }\r\n  return isMatch;\r\n}\r\n\r\nfunction goclone(source) {\r\n  if (Object.prototype.toString.call(source) === '[object Array]') {\r\n    let clone = [];\r\n    for (let i = 0; i < source.length; i++) {\r\n      clone[i] = goclone(source[i]);\r\n    }\r\n    return clone;\r\n  } else if (typeof source == 'object') {\r\n    let clone = {};\r\n    for (let prop in source) {\r\n      if (source.hasOwnProperty(prop)) {\r\n        clone[prop] = goclone(source[prop]);\r\n      }\r\n    }\r\n    return clone;\r\n  } else {\r\n    return source;\r\n  }\r\n}\r\n\r\nexport default MainContent;\r\n","import React, { useState, useEffect, useRef } from 'react';\nimport Sidebar from './components/Sidebar';\nimport MainContent from './components/MainContent';\nimport { searchCriteria as defaultSearchCriteria } from './utils/searchCriteria';\n\nconst depts = ['Human Resources', 'Legal', 'Marketing', 'Sales', 'Services'];\nconst cities = ['California', 'New York', 'Ohio', 'Boston', 'Florida'];\nconst jobtitles = [\n  'Benefits Manager',\n  'Lawyer',\n  'Marketing Analyst',\n  'Sales Rep',\n  'Service Manager',\n];\n\nfunction App() {\n  const [searchLocation, setSearchLocation] = useState(\n    defaultSearchCriteria.officeLocation\n  );\n  const [searchJobTitle, setSearchJobTitle] = useState(\n    defaultSearchCriteria.jobTitle\n  );\n  const [searchDepartment, setSearchDepartment] = useState(\n    defaultSearchCriteria.department\n  );\n\n  useEffect(() => {\n    console.log('CHanging something');\n  });\n\n  const handleLocationSelection = (event) => {\n    if (event.target.innerText === searchLocation) {\n      // that means the item got unselected\n      setSearchLocation('');\n    } else {\n      // set the new searc location criteria\n      setSearchLocation(event.target.innerText);\n    }\n  };\n\n  const handleDeptSelection = (event) => {\n    if (event.target.innerText === searchDepartment) {\n      // that means the item got unselected\n      setSearchDepartment('');\n    } else {\n      // set the new searc location criteria\n      setSearchDepartment(event.target.innerText);\n    }\n  };\n\n  const handleTitleSelection = (event) => {\n    if (event.target.innerText === searchJobTitle) {\n      // that means the item got unselected\n      setSearchJobTitle('');\n    } else {\n      // set the new searc location criteria\n      setSearchJobTitle(event.target.innerText);\n    }\n  };\n\n  const getCurrentSearchCriteria = () => {\n    let criteria = {};\n    if (searchLocation) {\n      criteria.officeLocation = searchLocation;\n    }\n    if (searchDepartment) {\n      criteria.department = searchDepartment;\n    }\n    if (searchJobTitle) {\n      criteria.jobTitle = searchJobTitle;\n    }\n    return criteria;\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"text-center pt-3\">Employee Directory</h1>\n      <div className=\"row mt-5\">\n        <div className=\"col-3\">\n          <Sidebar\n            filterType=\"officeLocation\"\n            filterName=\"location\"\n            filterItems={cities}\n            handleSelection={handleLocationSelection}\n            currentSelection={searchLocation}\n          />\n        </div>\n        <div className=\"col-9\">\n          <MainContent searchCriteria={getCurrentSearchCriteria()} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}